#!/usr/bin/env sh

## { alterEGO Linux: "Open the vault of knowledge" }___________________________
##
## .egorc
##   created     : 2021-03-19 09:37:19 UTC
##   updated     : 2021-08-31 12:39:06 UTC
##   description : Additional shell stuff for EGO Linux.
##   app         : sh
##   target      : ${HOME}/.alterEGO/.egorc
## ____________________________________________________________________________

  export EGORC="OK"

  function egorc_reload() {
    source "${HOME}/.alterEGO/.egorc"
    echo "egorc reloaded on $(date)"
  }

## [ WORDLISTS ]
  export wordlist="/usr/local/share/wordlist"
  export best1050="${wordlist}/best1050.txt"
  export big="${wordlist}/seclist-big.txt"
  export dirmedium="${wordlist}/directory-list-2.3-medium.txt"
  export rockyou="${wordlist}/rockyou.txt"
  export largefiles="${wordlist}/raft-large-files.txt"
  export xplatform="${wordlist}/xplatform.txt"

## [ REVERSE SHELL ]
  export patt_nodeJS="${revshell}/patt_nodeJS.js"
  export revshell="/usr/local/share/reverse_shell"
  export revshell_php="${revshell}/php-reverse-shell.php"
  export webshell="${revshell}/webshell.php"

## [ IP ADDRESSES ]

  function ipaddr() {
    #### IP addresses will be exported when .egorc is sourced with the
    #### function call, but can also be 'refreshed' when calling ipaddr
    #### from the terminal (ex. after starting a VPN connection).

    #### `host` is provided by the package 'bind'.
    export pubip="$(host myip.opendns.com resolver1.opendns.com                 \
                    | grep --color=never -oP '(?<=myip.opendns.com has address ).*$')"

    export locip="$(ip address | grep --color=never -oP "(?<=inet ).*(?=/.*enp)")"
    export vpnip="$(ip address | grep --color=never -oP "(?<=inet ).*(?=/.*tun)")"
  }
  ipaddr

## [ TryHackMe ]

  alias attack=". ${HOME}/.alterEGO/.tryhackmerc"

## [ Damn Vulnerable Web App (DVWA) ]

  function dvwa() {
      #### Will install or run the Damn Vulnerable Web App (DVWA) docker.
      sudo systemctl start docker.service
      docker run --rm -it -p 81:80 vulnerables/web-dvwa &
      sleep 2
      $BROWSER "http://localhost:81/login.php"
      # docker stop $(docker ps | grep "vulnerables/web-dvwa" | cut -d ' ' -f1)
      # sudo systemctl stop docker.proxy
      # sudo systemctl stop docker.service
      }

## { FIN }_____________________________________________________________________
